#Define private key
jwt.secret=secretkeyYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY

spring.datasource.url=jdbc:mysql://localhost:3306/webBook?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=Gau082001
#spring.jpa.show-sql=true
#server.port=8080
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#spring.security-oauth2-client-registration-google-clientId= 376330939575-k9u0l1j9d47god12p31sbiha9gntig2j.apps.googleusercontent.com
#spring.security-oauth2-client-registration-google-clientSecret=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
#spring.security-oauth2-client-registration-google-redirectUri ="{baseUrl}/oauth2/callback/{registrationId}"
#spring.security-oauth2-client-registration-google-scope = email - profile
#
#spring.security-oauth2-client-registration-google-facebook-clientId = 912149406425745
#spring.security-oauth2-client-registration-google-facebook-clientSecret= 3af9e7908b14dde5814799e0e46fc372
#spring.security-oauth2-client-registration-google-facebook-redirectUri= "{baseUrl}/oauth2/callback/{registrationId}"
#spring.security-oauth2-client-registration-google-facebook-scope = email - public_profile
#
#spring.security-oauth2-client-registration-provider0-facebook-authorizationUri= https://www.facebook.com/v14.0/dialog/oauth
#spring.security-oauth2-client-registration-provider0-facebook-tokenUri= https://graph.facebook.com/v14.0/oauth/access_token
#spring.security-oauth2-client-registration-provider0-facebook-userInfoUri= https://graph.facebook.com/v14.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,picture.width(250).height(250)
#
#app-auth-tokenSecret= 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
#app-auth-tokenExpirationMsec= 864000000
#app-cors-allowedOrigins= http://localhost:4200
#
## After successfully authenticating with the OAuth2 Provider,
## we'll be generating an auth token for the user and sending the token to the
## redirectUri mentioned by the client in the /oauth2/authorize request.
## We're not using cookies because they won't work well in mobile clients.
#app-oauth2-authorizedRedirectUris = http://localhost:4200/oauth2/redirect - myandroidapp://oauth2/redirect - myiosapp://oauth2/redirect
